jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Grant execute permissions to bin scripts
        run: chmod +x bin/*

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Check Ruby version
        run: ruby --version # Verifica a versão do Ruby

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: ruby bin/brakeman --no-pager # Usa ruby diretamente

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Grant execute permissions to bin scripts
        run: chmod +x bin/*

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Check Ruby version
        run: ruby --version # Verifica a versão do Ruby

      - name: Lint code for consistent style
        run: ruby bin/rubocop -f github # Usa ruby diretamente

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Grant execute permissions to bin scripts
        run: chmod +x bin/*

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Check Ruby version
        run: ruby --version # Verifica a versão do Ruby

      - name: Run tests
        run: ruby bin/rails db:test:prepare test test:system # Usa ruby diretamente

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
